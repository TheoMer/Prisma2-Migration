### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  address_line: String!
  card_name: String!
  city: String!
  country: String!
  createdAt: Date!
  id: String!
  postcode: String!
  updatedAt: Date!
  user: String
  User: User
}

input AddressCreateManyWithoutUserInput {
  connect: [AddressWhereUniqueInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutUserInput!]
  create: [AddressCreateWithoutUserInput!]
}

input AddressCreateOrConnectWithoutUserInput {
  create: AddressCreateWithoutUserInput!
  where: AddressWhereUniqueInput!
}

input AddressCreateWithoutUserInput {
  address_line: String!
  card_name: String!
  city: String!
  country: String!
  createdAt: DateTime
  id: String
  postcode: String!
  updatedAt: DateTime
}

input AddressListRelationFilter {
  every: AddressWhereInput
  none: AddressWhereInput
  some: AddressWhereInput
}

input AddressOrderByInput {
  address_line: SortOrder
  card_name: SortOrder
  city: SortOrder
  country: SortOrder
  createdAt: SortOrder
  id: SortOrder
  postcode: SortOrder
  updatedAt: SortOrder
  user: SortOrder
}

input AddressScalarWhereInput {
  address_line: StringFilter
  AND: [AddressScalarWhereInput!]
  card_name: StringFilter
  city: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [AddressScalarWhereInput!]
  OR: [AddressScalarWhereInput!]
  postcode: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
}

input AddressUpdateManyDataInput {
  address_line: String
  card_name: String
  city: String
  country: String
  createdAt: DateTime
  id: String
  postcode: String
  updatedAt: DateTime
}

input AddressUpdateManyWithoutUserInput {
  connect: [AddressWhereUniqueInput!]
  connectOrCreate: [AddressCreateOrConnectWithoutUserInput!]
  create: [AddressCreateWithoutUserInput!]
  delete: [AddressWhereUniqueInput!]
  deleteMany: [AddressScalarWhereInput!]
  disconnect: [AddressWhereUniqueInput!]
  set: [AddressWhereUniqueInput!]
  update: [AddressUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AddressUpdateManyWithWhereNestedInput!]
  upsert: [AddressUpsertWithWhereUniqueWithoutUserInput!]
}

input AddressUpdateManyWithWhereNestedInput {
  data: AddressUpdateManyDataInput!
  where: AddressScalarWhereInput!
}

input AddressUpdateWithoutUserDataInput {
  address_line: String
  card_name: String
  city: String
  country: String
  createdAt: DateTime
  id: String
  postcode: String
  updatedAt: DateTime
}

input AddressUpdateWithWhereUniqueWithoutUserInput {
  data: AddressUpdateWithoutUserDataInput!
  where: AddressWhereUniqueInput!
}

input AddressUpsertWithWhereUniqueWithoutUserInput {
  create: AddressCreateWithoutUserInput!
  update: AddressUpdateWithoutUserDataInput!
  where: AddressWhereUniqueInput!
}

input AddressWhereInput {
  address_line: StringFilter
  AND: [AddressWhereInput!]
  card_name: StringFilter
  city: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [AddressWhereInput!]
  OR: [AddressWhereInput!]
  postcode: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  User: UserWhereInput
}

input AddressWhereUniqueInput {
  id: String
}

type CartItem {
  createdAt: Date!
  id: String!
  item: String
  Item: Item
  itemvariants: String
  ItemVariants: ItemVariants
  quantity: Int!
  updatedAt: Date!
  user: String
  User: User
}

input CartItemCreateManyWithoutItemInput {
  connect: [CartItemWhereUniqueInput!]
  connectOrCreate: [CartItemCreateOrConnectWithoutItemInput!]
  create: [CartItemCreateWithoutItemInput!]
}

input CartItemCreateManyWithoutItemVariantsInput {
  connect: [CartItemWhereUniqueInput!]
  connectOrCreate: [CartItemCreateOrConnectWithoutItemVariantsInput!]
  create: [CartItemCreateWithoutItemVariantsInput!]
}

input CartItemCreateManyWithoutUserInput {
  connect: [CartItemWhereUniqueInput!]
  connectOrCreate: [CartItemCreateOrConnectWithoutUserInput!]
  create: [CartItemCreateWithoutUserInput!]
}

input CartItemCreateOrConnectWithoutItemInput {
  create: CartItemCreateWithoutItemInput!
  where: CartItemWhereUniqueInput!
}

input CartItemCreateOrConnectWithoutItemVariantsInput {
  create: CartItemCreateWithoutItemVariantsInput!
  where: CartItemWhereUniqueInput!
}

input CartItemCreateOrConnectWithoutUserInput {
  create: CartItemCreateWithoutUserInput!
  where: CartItemWhereUniqueInput!
}

input CartItemCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  ItemVariants: ItemVariantsCreateOneWithoutCartitemsInput
  quantity: Int
  updatedAt: DateTime
  User: UserCreateOneWithoutCartInput
}

input CartItemCreateWithoutItemVariantsInput {
  createdAt: DateTime
  id: String
  Item: ItemCreateOneWithoutCartitemsInput
  quantity: Int
  updatedAt: DateTime
  User: UserCreateOneWithoutCartInput
}

input CartItemCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  Item: ItemCreateOneWithoutCartitemsInput
  ItemVariants: ItemVariantsCreateOneWithoutCartitemsInput
  quantity: Int
  updatedAt: DateTime
}

input CartItemListRelationFilter {
  every: CartItemWhereInput
  none: CartItemWhereInput
  some: CartItemWhereInput
}

input CartItemOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  item: SortOrder
  itemvariants: SortOrder
  quantity: SortOrder
  updatedAt: SortOrder
  user: SortOrder
}

input CartItemScalarWhereInput {
  AND: [CartItemScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: StringNullableFilter
  itemvariants: StringNullableFilter
  NOT: [CartItemScalarWhereInput!]
  OR: [CartItemScalarWhereInput!]
  quantity: IntFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
}

input CartItemUpdateManyDataInput {
  createdAt: DateTime
  id: String
  quantity: Int
  updatedAt: DateTime
}

input CartItemUpdateManyWithoutItemInput {
  connect: [CartItemWhereUniqueInput!]
  connectOrCreate: [CartItemCreateOrConnectWithoutItemInput!]
  create: [CartItemCreateWithoutItemInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutItemInput!]
}

input CartItemUpdateManyWithoutItemVariantsInput {
  connect: [CartItemWhereUniqueInput!]
  connectOrCreate: [CartItemCreateOrConnectWithoutItemVariantsInput!]
  create: [CartItemCreateWithoutItemVariantsInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutItemVariantsInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutItemVariantsInput!]
}

input CartItemUpdateManyWithoutUserInput {
  connect: [CartItemWhereUniqueInput!]
  connectOrCreate: [CartItemCreateOrConnectWithoutUserInput!]
  create: [CartItemCreateWithoutUserInput!]
  delete: [CartItemWhereUniqueInput!]
  deleteMany: [CartItemScalarWhereInput!]
  disconnect: [CartItemWhereUniqueInput!]
  set: [CartItemWhereUniqueInput!]
  update: [CartItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [CartItemUpdateManyWithWhereNestedInput!]
  upsert: [CartItemUpsertWithWhereUniqueWithoutUserInput!]
}

input CartItemUpdateManyWithWhereNestedInput {
  data: CartItemUpdateManyDataInput!
  where: CartItemScalarWhereInput!
}

input CartItemUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  ItemVariants: ItemVariantsUpdateOneWithoutCartitemsInput
  quantity: Int
  updatedAt: DateTime
  User: UserUpdateOneWithoutCartInput
}

input CartItemUpdateWithoutItemVariantsDataInput {
  createdAt: DateTime
  id: String
  Item: ItemUpdateOneWithoutCartitemsInput
  quantity: Int
  updatedAt: DateTime
  User: UserUpdateOneWithoutCartInput
}

input CartItemUpdateWithoutUserDataInput {
  createdAt: DateTime
  id: String
  Item: ItemUpdateOneWithoutCartitemsInput
  ItemVariants: ItemVariantsUpdateOneWithoutCartitemsInput
  quantity: Int
  updatedAt: DateTime
}

input CartItemUpdateWithWhereUniqueWithoutItemInput {
  data: CartItemUpdateWithoutItemDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpdateWithWhereUniqueWithoutItemVariantsInput {
  data: CartItemUpdateWithoutItemVariantsDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpdateWithWhereUniqueWithoutUserInput {
  data: CartItemUpdateWithoutUserDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutItemInput {
  create: CartItemCreateWithoutItemInput!
  update: CartItemUpdateWithoutItemDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutItemVariantsInput {
  create: CartItemCreateWithoutItemVariantsInput!
  update: CartItemUpdateWithoutItemVariantsDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemUpsertWithWhereUniqueWithoutUserInput {
  create: CartItemCreateWithoutUserInput!
  update: CartItemUpdateWithoutUserDataInput!
  where: CartItemWhereUniqueInput!
}

input CartItemWhereInput {
  AND: [CartItemWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: StringNullableFilter
  Item: ItemWhereInput
  itemvariants: StringNullableFilter
  ItemVariants: ItemVariantsWhereInput
  NOT: [CartItemWhereInput!]
  OR: [CartItemWhereInput!]
  quantity: IntFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  User: UserWhereInput
}

input CartItemWhereUniqueInput {
  id: String
}

type Color {
  createdAt: Date!
  id: String!
  item(cursor: ItemWhereUniqueInput, orderBy: [ItemOrderByInput!], skip: Int, take: Int, where: ItemWhereInput): [Item!]!
  itemvariants(cursor: ItemVariantsWhereUniqueInput, orderBy: [ItemVariantsOrderByInput!], skip: Int, take: Int, where: ItemVariantsWhereInput): [ItemVariants!]!
  label: String
  name: String!
  orderitem(cursor: OrderItemWhereUniqueInput, orderBy: [OrderItemOrderByInput!], skip: Int, take: Int, where: OrderItemWhereInput): [OrderItem!]!
  updatedAt: Date!
}

input ColorCreateOneWithoutItemInput {
  connect: ColorWhereUniqueInput
  connectOrCreate: ColorCreateOrConnectWithoutItemInput
  create: ColorCreateWithoutItemInput
}

input ColorCreateOneWithoutItemvariantsInput {
  connect: ColorWhereUniqueInput
  connectOrCreate: ColorCreateOrConnectWithoutItemVariantsInput
  create: ColorCreateWithoutItemvariantsInput
}

input ColorCreateOneWithoutOrderitemInput {
  connect: ColorWhereUniqueInput
  connectOrCreate: ColorCreateOrConnectWithoutOrderItemInput
  create: ColorCreateWithoutOrderitemInput
}

input ColorCreateOrConnectWithoutItemInput {
  create: ColorCreateWithoutItemInput!
  where: ColorWhereUniqueInput!
}

input ColorCreateOrConnectWithoutItemVariantsInput {
  create: ColorCreateWithoutItemvariantsInput!
  where: ColorWhereUniqueInput!
}

input ColorCreateOrConnectWithoutOrderItemInput {
  create: ColorCreateWithoutOrderitemInput!
  where: ColorWhereUniqueInput!
}

input ColorCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  itemvariants: ItemVariantsCreateManyWithoutColorInput
  label: String
  name: String!
  orderitem: OrderItemCreateManyWithoutColorInput
  updatedAt: DateTime
}

input ColorCreateWithoutItemvariantsInput {
  createdAt: DateTime
  id: String
  item: ItemCreateManyWithoutColorInput
  label: String
  name: String!
  orderitem: OrderItemCreateManyWithoutColorInput
  updatedAt: DateTime
}

input ColorCreateWithoutOrderitemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateManyWithoutColorInput
  itemvariants: ItemVariantsCreateManyWithoutColorInput
  label: String
  name: String!
  updatedAt: DateTime
}

input ColorOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  label: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input ColorUpdateOneRequiredWithoutItemInput {
  connect: ColorWhereUniqueInput
  connectOrCreate: ColorCreateOrConnectWithoutItemInput
  create: ColorCreateWithoutItemInput
  update: ColorUpdateWithoutItemDataInput
  upsert: ColorUpsertWithoutItemInput
}

input ColorUpdateOneRequiredWithoutItemvariantsInput {
  connect: ColorWhereUniqueInput
  connectOrCreate: ColorCreateOrConnectWithoutItemVariantsInput
  create: ColorCreateWithoutItemvariantsInput
  update: ColorUpdateWithoutItemvariantsDataInput
  upsert: ColorUpsertWithoutItemvariantsInput
}

input ColorUpdateOneRequiredWithoutOrderitemInput {
  connect: ColorWhereUniqueInput
  connectOrCreate: ColorCreateOrConnectWithoutOrderItemInput
  create: ColorCreateWithoutOrderitemInput
  update: ColorUpdateWithoutOrderitemDataInput
  upsert: ColorUpsertWithoutOrderitemInput
}

input ColorUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  itemvariants: ItemVariantsUpdateManyWithoutColorInput
  label: String
  name: String
  orderitem: OrderItemUpdateManyWithoutColorInput
  updatedAt: DateTime
}

input ColorUpdateWithoutItemvariantsDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateManyWithoutColorInput
  label: String
  name: String
  orderitem: OrderItemUpdateManyWithoutColorInput
  updatedAt: DateTime
}

input ColorUpdateWithoutOrderitemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateManyWithoutColorInput
  itemvariants: ItemVariantsUpdateManyWithoutColorInput
  label: String
  name: String
  updatedAt: DateTime
}

input ColorUpsertWithoutItemInput {
  create: ColorCreateWithoutItemInput!
  update: ColorUpdateWithoutItemDataInput!
}

input ColorUpsertWithoutItemvariantsInput {
  create: ColorCreateWithoutItemvariantsInput!
  update: ColorUpdateWithoutItemvariantsDataInput!
}

input ColorUpsertWithoutOrderitemInput {
  create: ColorCreateWithoutOrderitemInput!
  update: ColorUpdateWithoutOrderitemDataInput!
}

input ColorWhereInput {
  AND: [ColorWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemListRelationFilter
  itemvariants: ItemVariantsListRelationFilter
  label: StringNullableFilter
  name: StringFilter
  NOT: [ColorWhereInput!]
  OR: [ColorWhereInput!]
  orderitem: OrderItemListRelationFilter
  updatedAt: DateTimeFilter
}

input ColorWhereUniqueInput {
  id: String
  name: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

type Item {
  cartitems(cursor: CartItemWhereUniqueInput, orderBy: [CartItemOrderByInput!], skip: Int, take: Int, where: CartItemWhereInput): [CartItem!]!
  color: String!
  Color: Color!
  createdAt: Date!
  description: String!
  id: String!
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants(cursor: ItemVariantsWhereUniqueInput, orderBy: [ItemVariantsOrderByInput!], skip: Int, take: Int, where: ItemVariantsWhereInput): [ItemVariants!]!
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int!
  size: String!
  Size: Size!
  title: String!
  updatedAt: Date!
  user: String
  User: User
  userIdentity: String!
}

type ItemConnection {
  count: Int!
}

input ItemCreateInput {
  cartitems: CartItemCreateManyWithoutItemInput
  Color: ColorCreateOneWithoutItemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsCreateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemsInput
  userIdentity: String
}

input ItemCreateManyWithoutColorInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutColorInput!]
  create: [ItemCreateWithoutColorInput!]
}

input ItemCreateManyWithoutSizeInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutSizeInput!]
  create: [ItemCreateWithoutSizeInput!]
}

input ItemCreateManyWithoutUserInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutUserInput!]
  create: [ItemCreateWithoutUserInput!]
}

input ItemCreateOneWithoutCartitemsInput {
  connect: ItemWhereUniqueInput
  connectOrCreate: ItemCreateOrConnectWithoutCartItemInput
  create: ItemCreateWithoutCartitemsInput
}

input ItemCreateOneWithoutItemvariantsInput {
  connect: ItemWhereUniqueInput
  connectOrCreate: ItemCreateOrConnectWithoutItemVariantsInput
  create: ItemCreateWithoutItemvariantsInput
}

input ItemCreateOrConnectWithoutCartItemInput {
  create: ItemCreateWithoutCartitemsInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithoutColorInput {
  create: ItemCreateWithoutColorInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithoutItemVariantsInput {
  create: ItemCreateWithoutItemvariantsInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithoutSizeInput {
  create: ItemCreateWithoutSizeInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateOrConnectWithoutUserInput {
  create: ItemCreateWithoutUserInput!
  where: ItemWhereUniqueInput!
}

input ItemCreateWithoutCartitemsInput {
  Color: ColorCreateOneWithoutItemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsCreateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemsInput
  userIdentity: String
}

input ItemCreateWithoutColorInput {
  cartitems: CartItemCreateManyWithoutItemInput
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsCreateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemsInput
  userIdentity: String
}

input ItemCreateWithoutItemvariantsInput {
  cartitems: CartItemCreateManyWithoutItemInput
  Color: ColorCreateOneWithoutItemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemsInput
  userIdentity: String
}

input ItemCreateWithoutSizeInput {
  cartitems: CartItemCreateManyWithoutItemInput
  Color: ColorCreateOneWithoutItemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsCreateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemsInput
  userIdentity: String
}

input ItemCreateWithoutUserInput {
  cartitems: CartItemCreateManyWithoutItemInput
  Color: ColorCreateOneWithoutItemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsCreateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemInput!
  title: String!
  updatedAt: DateTime
  userIdentity: String
}

input ItemListRelationFilter {
  every: ItemWhereInput
  none: ItemWhereInput
  some: ItemWhereInput
}

type ItemModifier {
  item: Item!
  type: String!
}

input ItemOrderByInput {
  color: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  image2: SortOrder
  image3: SortOrder
  image4: SortOrder
  image5: SortOrder
  image6: SortOrder
  largeImage: SortOrder
  largeImage2: SortOrder
  largeImage3: SortOrder
  largeImage4: SortOrder
  largeImage5: SortOrder
  largeImage6: SortOrder
  mainDescription: SortOrder
  price: SortOrder
  quantity: SortOrder
  size: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  user: SortOrder
  userIdentity: SortOrder
}

input ItemScalarWhereInput {
  AND: [ItemScalarWhereInput!]
  color: StringFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringNullableFilter
  image2: StringNullableFilter
  image3: StringNullableFilter
  image4: StringNullableFilter
  image5: StringNullableFilter
  image6: StringNullableFilter
  largeImage: StringNullableFilter
  largeImage2: StringNullableFilter
  largeImage3: StringNullableFilter
  largeImage4: StringNullableFilter
  largeImage5: StringNullableFilter
  largeImage6: StringNullableFilter
  mainDescription: StringFilter
  NOT: [ItemScalarWhereInput!]
  OR: [ItemScalarWhereInput!]
  price: IntFilter
  quantity: IntFilter
  size: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  userIdentity: StringFilter
}

input ItemUpdateInput {
  cartitems: CartItemUpdateManyWithoutItemInput
  Color: ColorUpdateOneRequiredWithoutItemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsUpdateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemsInput
  userIdentity: String
}

input ItemUpdateManyDataInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  title: String
  updatedAt: DateTime
  userIdentity: String
}

input ItemUpdateManyWithoutColorInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutColorInput!]
  create: [ItemCreateWithoutColorInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutColorInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutColorInput!]
}

input ItemUpdateManyWithoutSizeInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutSizeInput!]
  create: [ItemCreateWithoutSizeInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutSizeInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutSizeInput!]
}

input ItemUpdateManyWithoutUserInput {
  connect: [ItemWhereUniqueInput!]
  connectOrCreate: [ItemCreateOrConnectWithoutUserInput!]
  create: [ItemCreateWithoutUserInput!]
  delete: [ItemWhereUniqueInput!]
  deleteMany: [ItemScalarWhereInput!]
  disconnect: [ItemWhereUniqueInput!]
  set: [ItemWhereUniqueInput!]
  update: [ItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ItemUpdateManyWithWhereNestedInput!]
  upsert: [ItemUpsertWithWhereUniqueWithoutUserInput!]
}

input ItemUpdateManyWithWhereNestedInput {
  data: ItemUpdateManyDataInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateOneRequiredWithoutItemvariantsInput {
  connect: ItemWhereUniqueInput
  connectOrCreate: ItemCreateOrConnectWithoutItemVariantsInput
  create: ItemCreateWithoutItemvariantsInput
  update: ItemUpdateWithoutItemvariantsDataInput
  upsert: ItemUpsertWithoutItemvariantsInput
}

input ItemUpdateOneWithoutCartitemsInput {
  connect: ItemWhereUniqueInput
  connectOrCreate: ItemCreateOrConnectWithoutCartItemInput
  create: ItemCreateWithoutCartitemsInput
  delete: Boolean
  disconnect: Boolean
  update: ItemUpdateWithoutCartitemsDataInput
  upsert: ItemUpsertWithoutCartitemsInput
}

input ItemUpdateWithoutCartitemsDataInput {
  Color: ColorUpdateOneRequiredWithoutItemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsUpdateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemsInput
  userIdentity: String
}

input ItemUpdateWithoutColorDataInput {
  cartitems: CartItemUpdateManyWithoutItemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsUpdateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemsInput
  userIdentity: String
}

input ItemUpdateWithoutItemvariantsDataInput {
  cartitems: CartItemUpdateManyWithoutItemInput
  Color: ColorUpdateOneRequiredWithoutItemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemsInput
  userIdentity: String
}

input ItemUpdateWithoutSizeDataInput {
  cartitems: CartItemUpdateManyWithoutItemInput
  Color: ColorUpdateOneRequiredWithoutItemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsUpdateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemsInput
  userIdentity: String
}

input ItemUpdateWithoutUserDataInput {
  cartitems: CartItemUpdateManyWithoutItemInput
  Color: ColorUpdateOneRequiredWithoutItemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  itemvariants: ItemVariantsUpdateManyWithoutItemInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemInput
  title: String
  updatedAt: DateTime
  userIdentity: String
}

input ItemUpdateWithWhereUniqueWithoutColorInput {
  data: ItemUpdateWithoutColorDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpdateWithWhereUniqueWithoutSizeInput {
  data: ItemUpdateWithoutSizeDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpdateWithWhereUniqueWithoutUserInput {
  data: ItemUpdateWithoutUserDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithoutCartitemsInput {
  create: ItemCreateWithoutCartitemsInput!
  update: ItemUpdateWithoutCartitemsDataInput!
}

input ItemUpsertWithoutItemvariantsInput {
  create: ItemCreateWithoutItemvariantsInput!
  update: ItemUpdateWithoutItemvariantsDataInput!
}

input ItemUpsertWithWhereUniqueWithoutColorInput {
  create: ItemCreateWithoutColorInput!
  update: ItemUpdateWithoutColorDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutSizeInput {
  create: ItemCreateWithoutSizeInput!
  update: ItemUpdateWithoutSizeDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutUserInput {
  create: ItemCreateWithoutUserInput!
  update: ItemUpdateWithoutUserDataInput!
  where: ItemWhereUniqueInput!
}

type ItemVariants {
  cartitems(cursor: CartItemWhereUniqueInput, orderBy: [CartItemOrderByInput!], skip: Int, take: Int, where: CartItemWhereInput): [CartItem!]!
  color: String!
  Color: Color!
  createdAt: Date!
  description: String!
  id: String!
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  item: String!
  Item: Item!
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int!
  size: String!
  Size: Size!
  title: String!
  updatedAt: Date!
  user: String
  User: User
}

input ItemVariantsCreateManyWithoutColorInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutColorInput!]
  create: [ItemVariantsCreateWithoutColorInput!]
}

input ItemVariantsCreateManyWithoutItemInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutItemInput!]
  create: [ItemVariantsCreateWithoutItemInput!]
}

input ItemVariantsCreateManyWithoutSizeInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutSizeInput!]
  create: [ItemVariantsCreateWithoutSizeInput!]
}

input ItemVariantsCreateManyWithoutUserInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutUserInput!]
  create: [ItemVariantsCreateWithoutUserInput!]
}

input ItemVariantsCreateOneWithoutCartitemsInput {
  connect: ItemVariantsWhereUniqueInput
  connectOrCreate: ItemVariantsCreateOrConnectWithoutCartItemInput
  create: ItemVariantsCreateWithoutCartitemsInput
}

input ItemVariantsCreateOrConnectWithoutCartItemInput {
  create: ItemVariantsCreateWithoutCartitemsInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsCreateOrConnectWithoutColorInput {
  create: ItemVariantsCreateWithoutColorInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsCreateOrConnectWithoutItemInput {
  create: ItemVariantsCreateWithoutItemInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsCreateOrConnectWithoutSizeInput {
  create: ItemVariantsCreateWithoutSizeInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsCreateOrConnectWithoutUserInput {
  create: ItemVariantsCreateWithoutUserInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsCreateWithoutCartitemsInput {
  Color: ColorCreateOneWithoutItemvariantsInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemCreateOneWithoutItemvariantsInput!
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemvariantsInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemvariantsInput
}

input ItemVariantsCreateWithoutColorInput {
  cartitems: CartItemCreateManyWithoutItemVariantsInput
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemCreateOneWithoutItemvariantsInput!
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemvariantsInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemvariantsInput
}

input ItemVariantsCreateWithoutItemInput {
  cartitems: CartItemCreateManyWithoutItemVariantsInput
  Color: ColorCreateOneWithoutItemvariantsInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemvariantsInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemvariantsInput
}

input ItemVariantsCreateWithoutSizeInput {
  cartitems: CartItemCreateManyWithoutItemVariantsInput
  Color: ColorCreateOneWithoutItemvariantsInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemCreateOneWithoutItemvariantsInput!
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutItemvariantsInput
}

input ItemVariantsCreateWithoutUserInput {
  cartitems: CartItemCreateManyWithoutItemVariantsInput
  Color: ColorCreateOneWithoutItemvariantsInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemCreateOneWithoutItemvariantsInput!
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutItemvariantsInput!
  title: String!
  updatedAt: DateTime
}

input ItemVariantsListRelationFilter {
  every: ItemVariantsWhereInput
  none: ItemVariantsWhereInput
  some: ItemVariantsWhereInput
}

input ItemVariantsOrderByInput {
  color: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  image2: SortOrder
  image3: SortOrder
  image4: SortOrder
  image5: SortOrder
  image6: SortOrder
  item: SortOrder
  largeImage: SortOrder
  largeImage2: SortOrder
  largeImage3: SortOrder
  largeImage4: SortOrder
  largeImage5: SortOrder
  largeImage6: SortOrder
  mainDescription: SortOrder
  price: SortOrder
  quantity: SortOrder
  size: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  user: SortOrder
}

input ItemVariantsScalarWhereInput {
  AND: [ItemVariantsScalarWhereInput!]
  color: StringFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringNullableFilter
  image2: StringNullableFilter
  image3: StringNullableFilter
  image4: StringNullableFilter
  image5: StringNullableFilter
  image6: StringNullableFilter
  item: StringFilter
  largeImage: StringNullableFilter
  largeImage2: StringNullableFilter
  largeImage3: StringNullableFilter
  largeImage4: StringNullableFilter
  largeImage5: StringNullableFilter
  largeImage6: StringNullableFilter
  mainDescription: StringFilter
  NOT: [ItemVariantsScalarWhereInput!]
  OR: [ItemVariantsScalarWhereInput!]
  price: IntFilter
  quantity: IntFilter
  size: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
}

input ItemVariantsUpdateManyDataInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  title: String
  updatedAt: DateTime
}

input ItemVariantsUpdateManyWithoutColorInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutColorInput!]
  create: [ItemVariantsCreateWithoutColorInput!]
  delete: [ItemVariantsWhereUniqueInput!]
  deleteMany: [ItemVariantsScalarWhereInput!]
  disconnect: [ItemVariantsWhereUniqueInput!]
  set: [ItemVariantsWhereUniqueInput!]
  update: [ItemVariantsUpdateWithWhereUniqueWithoutColorInput!]
  updateMany: [ItemVariantsUpdateManyWithWhereNestedInput!]
  upsert: [ItemVariantsUpsertWithWhereUniqueWithoutColorInput!]
}

input ItemVariantsUpdateManyWithoutItemInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutItemInput!]
  create: [ItemVariantsCreateWithoutItemInput!]
  delete: [ItemVariantsWhereUniqueInput!]
  deleteMany: [ItemVariantsScalarWhereInput!]
  disconnect: [ItemVariantsWhereUniqueInput!]
  set: [ItemVariantsWhereUniqueInput!]
  update: [ItemVariantsUpdateWithWhereUniqueWithoutItemInput!]
  updateMany: [ItemVariantsUpdateManyWithWhereNestedInput!]
  upsert: [ItemVariantsUpsertWithWhereUniqueWithoutItemInput!]
}

input ItemVariantsUpdateManyWithoutSizeInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutSizeInput!]
  create: [ItemVariantsCreateWithoutSizeInput!]
  delete: [ItemVariantsWhereUniqueInput!]
  deleteMany: [ItemVariantsScalarWhereInput!]
  disconnect: [ItemVariantsWhereUniqueInput!]
  set: [ItemVariantsWhereUniqueInput!]
  update: [ItemVariantsUpdateWithWhereUniqueWithoutSizeInput!]
  updateMany: [ItemVariantsUpdateManyWithWhereNestedInput!]
  upsert: [ItemVariantsUpsertWithWhereUniqueWithoutSizeInput!]
}

input ItemVariantsUpdateManyWithoutUserInput {
  connect: [ItemVariantsWhereUniqueInput!]
  connectOrCreate: [ItemVariantsCreateOrConnectWithoutUserInput!]
  create: [ItemVariantsCreateWithoutUserInput!]
  delete: [ItemVariantsWhereUniqueInput!]
  deleteMany: [ItemVariantsScalarWhereInput!]
  disconnect: [ItemVariantsWhereUniqueInput!]
  set: [ItemVariantsWhereUniqueInput!]
  update: [ItemVariantsUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ItemVariantsUpdateManyWithWhereNestedInput!]
  upsert: [ItemVariantsUpsertWithWhereUniqueWithoutUserInput!]
}

input ItemVariantsUpdateManyWithWhereNestedInput {
  data: ItemVariantsUpdateManyDataInput!
  where: ItemVariantsScalarWhereInput!
}

input ItemVariantsUpdateOneWithoutCartitemsInput {
  connect: ItemVariantsWhereUniqueInput
  connectOrCreate: ItemVariantsCreateOrConnectWithoutCartItemInput
  create: ItemVariantsCreateWithoutCartitemsInput
  delete: Boolean
  disconnect: Boolean
  update: ItemVariantsUpdateWithoutCartitemsDataInput
  upsert: ItemVariantsUpsertWithoutCartitemsInput
}

input ItemVariantsUpdateWithoutCartitemsDataInput {
  Color: ColorUpdateOneRequiredWithoutItemvariantsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemUpdateOneRequiredWithoutItemvariantsInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemvariantsInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemvariantsInput
}

input ItemVariantsUpdateWithoutColorDataInput {
  cartitems: CartItemUpdateManyWithoutItemVariantsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemUpdateOneRequiredWithoutItemvariantsInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemvariantsInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemvariantsInput
}

input ItemVariantsUpdateWithoutItemDataInput {
  cartitems: CartItemUpdateManyWithoutItemVariantsInput
  Color: ColorUpdateOneRequiredWithoutItemvariantsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemvariantsInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemvariantsInput
}

input ItemVariantsUpdateWithoutSizeDataInput {
  cartitems: CartItemUpdateManyWithoutItemVariantsInput
  Color: ColorUpdateOneRequiredWithoutItemvariantsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemUpdateOneRequiredWithoutItemvariantsInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutItemvariantsInput
}

input ItemVariantsUpdateWithoutUserDataInput {
  cartitems: CartItemUpdateManyWithoutItemVariantsInput
  Color: ColorUpdateOneRequiredWithoutItemvariantsInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  image2: String
  image3: String
  image4: String
  image5: String
  image6: String
  Item: ItemUpdateOneRequiredWithoutItemvariantsInput
  largeImage: String
  largeImage2: String
  largeImage3: String
  largeImage4: String
  largeImage5: String
  largeImage6: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutItemvariantsInput
  title: String
  updatedAt: DateTime
}

input ItemVariantsUpdateWithWhereUniqueWithoutColorInput {
  data: ItemVariantsUpdateWithoutColorDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpdateWithWhereUniqueWithoutItemInput {
  data: ItemVariantsUpdateWithoutItemDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpdateWithWhereUniqueWithoutSizeInput {
  data: ItemVariantsUpdateWithoutSizeDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpdateWithWhereUniqueWithoutUserInput {
  data: ItemVariantsUpdateWithoutUserDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpsertWithoutCartitemsInput {
  create: ItemVariantsCreateWithoutCartitemsInput!
  update: ItemVariantsUpdateWithoutCartitemsDataInput!
}

input ItemVariantsUpsertWithWhereUniqueWithoutColorInput {
  create: ItemVariantsCreateWithoutColorInput!
  update: ItemVariantsUpdateWithoutColorDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpsertWithWhereUniqueWithoutItemInput {
  create: ItemVariantsCreateWithoutItemInput!
  update: ItemVariantsUpdateWithoutItemDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpsertWithWhereUniqueWithoutSizeInput {
  create: ItemVariantsCreateWithoutSizeInput!
  update: ItemVariantsUpdateWithoutSizeDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsUpsertWithWhereUniqueWithoutUserInput {
  create: ItemVariantsCreateWithoutUserInput!
  update: ItemVariantsUpdateWithoutUserDataInput!
  where: ItemVariantsWhereUniqueInput!
}

input ItemVariantsWhereInput {
  AND: [ItemVariantsWhereInput!]
  cartitems: CartItemListRelationFilter
  color: StringFilter
  Color: ColorWhereInput
  createdAt: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringNullableFilter
  image2: StringNullableFilter
  image3: StringNullableFilter
  image4: StringNullableFilter
  image5: StringNullableFilter
  image6: StringNullableFilter
  item: StringFilter
  Item: ItemWhereInput
  largeImage: StringNullableFilter
  largeImage2: StringNullableFilter
  largeImage3: StringNullableFilter
  largeImage4: StringNullableFilter
  largeImage5: StringNullableFilter
  largeImage6: StringNullableFilter
  mainDescription: StringFilter
  NOT: [ItemVariantsWhereInput!]
  OR: [ItemVariantsWhereInput!]
  price: IntFilter
  quantity: IntFilter
  size: StringFilter
  Size: SizeWhereInput
  title: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  User: UserWhereInput
}

input ItemVariantsWhereUniqueInput {
  id: String
}

input ItemWhereInput {
  AND: [ItemWhereInput!]
  cartitems: CartItemListRelationFilter
  color: StringFilter
  Color: ColorWhereInput
  createdAt: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringNullableFilter
  image2: StringNullableFilter
  image3: StringNullableFilter
  image4: StringNullableFilter
  image5: StringNullableFilter
  image6: StringNullableFilter
  itemvariants: ItemVariantsListRelationFilter
  largeImage: StringNullableFilter
  largeImage2: StringNullableFilter
  largeImage3: StringNullableFilter
  largeImage4: StringNullableFilter
  largeImage5: StringNullableFilter
  largeImage6: StringNullableFilter
  mainDescription: StringFilter
  NOT: [ItemWhereInput!]
  OR: [ItemWhereInput!]
  price: IntFilter
  quantity: IntFilter
  size: StringFilter
  Size: SizeWhereInput
  title: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  User: UserWhereInput
  userIdentity: StringFilter
}

input ItemWhereUniqueInput {
  id: String
}

type Mutation {
  addItemVariantsToCart(id: String!): CartItem
  addToCart(id: String!): CartItem
  createAddress(address_line: String!, card_name: String!, city: String!, country: String!, email: String!, postcode: String!, userId: String!): Address!
  createItem(data: ItemCreateInput!): Item!
  createOrder(address_line: String!, card_brand: String!, card_name: String!, city: String!, country: String!, last4card_digits: String!, postcode: String!, token: String!): Order!
  createSiteVisits(data: SiteVisitsCreateInput!): SiteVisits!
  deleteItem(id: String!): Item
  removeFromCart(id: String!, itemId: String!): CartItem
  requestReset(email: String!): SuccessMessage
  resetPassword(confirmPassword: String!, password: String!, resetToken: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  signup(email: String!, name: String!, password: String!): User!
  updateAddress(address_line: String!, card_name: String!, city: String!, country: String!, email: String!, postcode: String!, userId: ID!): Address!
  updateCartItem(id: String!, quantity: Int): CartItem
  updateGuestEmail(email: String!, userId: String!): User!
  updateItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updatePermissions(permissions2: [Permission2!], userId: String!): User
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Order {
  address_line: String!
  card_brand: String!
  card_name: String!
  charge: String!
  city: String!
  country: String!
  createdAt: Date!
  id: String!
  items(cursor: OrderItemWhereUniqueInput, orderBy: [OrderItemOrderByInput!], skip: Int, take: Int, where: OrderItemWhereInput): [OrderItem!]!
  last4card_digits: String!
  postcode: String!
  total: Int!
  updatedAt: Date!
  user: String
  User: User
}

input OrderCreateManyWithoutUserInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutUserInput!]
  create: [OrderCreateWithoutUserInput!]
}

input OrderCreateOneWithoutItemsInput {
  connect: OrderWhereUniqueInput
  connectOrCreate: OrderCreateOrConnectWithoutOrderItemInput
  create: OrderCreateWithoutItemsInput
}

input OrderCreateOrConnectWithoutOrderItemInput {
  create: OrderCreateWithoutItemsInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateOrConnectWithoutUserInput {
  create: OrderCreateWithoutUserInput!
  where: OrderWhereUniqueInput!
}

input OrderCreateWithoutItemsInput {
  address_line: String!
  card_brand: String!
  card_name: String!
  charge: String!
  city: String!
  country: String!
  createdAt: DateTime
  id: String
  last4card_digits: String!
  postcode: String!
  total: Int!
  updatedAt: DateTime
  User: UserCreateOneWithoutOrderInput
}

input OrderCreateWithoutUserInput {
  address_line: String!
  card_brand: String!
  card_name: String!
  charge: String!
  city: String!
  country: String!
  createdAt: DateTime
  id: String
  items: OrderItemCreateManyWithoutOrderInput
  last4card_digits: String!
  postcode: String!
  total: Int!
  updatedAt: DateTime
}

type OrderItem {
  color: String!
  Color: Color!
  createdAt: Date!
  description: String!
  id: String!
  image: String!
  itemid: String!
  largeImage: String!
  mainDescription: String!
  order: String!
  Order: Order!
  price: Int!
  quantity: Int!
  size: String!
  Size: Size!
  title: String!
  updatedAt: Date!
  user: String
  User: User
}

input OrderItemCreateManyWithoutColorInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutColorInput!]
  create: [OrderItemCreateWithoutColorInput!]
}

input OrderItemCreateManyWithoutOrderInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutOrderInput!]
  create: [OrderItemCreateWithoutOrderInput!]
}

input OrderItemCreateManyWithoutSizeInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutSizeInput!]
  create: [OrderItemCreateWithoutSizeInput!]
}

input OrderItemCreateManyWithoutUserInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutUserInput!]
  create: [OrderItemCreateWithoutUserInput!]
}

input OrderItemCreateOrConnectWithoutColorInput {
  create: OrderItemCreateWithoutColorInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateOrConnectWithoutOrderInput {
  create: OrderItemCreateWithoutOrderInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateOrConnectWithoutSizeInput {
  create: OrderItemCreateWithoutSizeInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateOrConnectWithoutUserInput {
  create: OrderItemCreateWithoutUserInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemCreateWithoutColorInput {
  createdAt: DateTime
  description: String!
  id: String
  image: String!
  itemid: String!
  largeImage: String!
  mainDescription: String!
  Order: OrderCreateOneWithoutItemsInput!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutOrderitemInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutOrderitemInput
}

input OrderItemCreateWithoutOrderInput {
  Color: ColorCreateOneWithoutOrderitemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String!
  itemid: String!
  largeImage: String!
  mainDescription: String!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutOrderitemInput!
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutOrderitemInput
}

input OrderItemCreateWithoutSizeInput {
  Color: ColorCreateOneWithoutOrderitemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String!
  itemid: String!
  largeImage: String!
  mainDescription: String!
  Order: OrderCreateOneWithoutItemsInput!
  price: Int!
  quantity: Int
  title: String!
  updatedAt: DateTime
  User: UserCreateOneWithoutOrderitemInput
}

input OrderItemCreateWithoutUserInput {
  Color: ColorCreateOneWithoutOrderitemInput!
  createdAt: DateTime
  description: String!
  id: String
  image: String!
  itemid: String!
  largeImage: String!
  mainDescription: String!
  Order: OrderCreateOneWithoutItemsInput!
  price: Int!
  quantity: Int
  Size: SizeCreateOneWithoutOrderitemInput!
  title: String!
  updatedAt: DateTime
}

input OrderItemListRelationFilter {
  every: OrderItemWhereInput
  none: OrderItemWhereInput
  some: OrderItemWhereInput
}

input OrderItemOrderByInput {
  color: SortOrder
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  image: SortOrder
  itemid: SortOrder
  largeImage: SortOrder
  mainDescription: SortOrder
  order: SortOrder
  price: SortOrder
  quantity: SortOrder
  size: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  user: SortOrder
}

input OrderItemScalarWhereInput {
  AND: [OrderItemScalarWhereInput!]
  color: StringFilter
  createdAt: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringFilter
  itemid: StringFilter
  largeImage: StringFilter
  mainDescription: StringFilter
  NOT: [OrderItemScalarWhereInput!]
  OR: [OrderItemScalarWhereInput!]
  order: StringFilter
  price: IntFilter
  quantity: IntFilter
  size: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
}

input OrderItemUpdateManyDataInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  itemid: String
  largeImage: String
  mainDescription: String
  price: Int
  quantity: Int
  title: String
  updatedAt: DateTime
}

input OrderItemUpdateManyWithoutColorInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutColorInput!]
  create: [OrderItemCreateWithoutColorInput!]
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutColorInput!]
  updateMany: [OrderItemUpdateManyWithWhereNestedInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutColorInput!]
}

input OrderItemUpdateManyWithoutOrderInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutOrderInput!]
  create: [OrderItemCreateWithoutOrderInput!]
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutOrderInput!]
  updateMany: [OrderItemUpdateManyWithWhereNestedInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutOrderInput!]
}

input OrderItemUpdateManyWithoutSizeInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutSizeInput!]
  create: [OrderItemCreateWithoutSizeInput!]
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutSizeInput!]
  updateMany: [OrderItemUpdateManyWithWhereNestedInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutSizeInput!]
}

input OrderItemUpdateManyWithoutUserInput {
  connect: [OrderItemWhereUniqueInput!]
  connectOrCreate: [OrderItemCreateOrConnectWithoutUserInput!]
  create: [OrderItemCreateWithoutUserInput!]
  delete: [OrderItemWhereUniqueInput!]
  deleteMany: [OrderItemScalarWhereInput!]
  disconnect: [OrderItemWhereUniqueInput!]
  set: [OrderItemWhereUniqueInput!]
  update: [OrderItemUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OrderItemUpdateManyWithWhereNestedInput!]
  upsert: [OrderItemUpsertWithWhereUniqueWithoutUserInput!]
}

input OrderItemUpdateManyWithWhereNestedInput {
  data: OrderItemUpdateManyDataInput!
  where: OrderItemScalarWhereInput!
}

input OrderItemUpdateWithoutColorDataInput {
  createdAt: DateTime
  description: String
  id: String
  image: String
  itemid: String
  largeImage: String
  mainDescription: String
  Order: OrderUpdateOneRequiredWithoutItemsInput
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutOrderitemInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutOrderitemInput
}

input OrderItemUpdateWithoutOrderDataInput {
  Color: ColorUpdateOneRequiredWithoutOrderitemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  itemid: String
  largeImage: String
  mainDescription: String
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutOrderitemInput
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutOrderitemInput
}

input OrderItemUpdateWithoutSizeDataInput {
  Color: ColorUpdateOneRequiredWithoutOrderitemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  itemid: String
  largeImage: String
  mainDescription: String
  Order: OrderUpdateOneRequiredWithoutItemsInput
  price: Int
  quantity: Int
  title: String
  updatedAt: DateTime
  User: UserUpdateOneWithoutOrderitemInput
}

input OrderItemUpdateWithoutUserDataInput {
  Color: ColorUpdateOneRequiredWithoutOrderitemInput
  createdAt: DateTime
  description: String
  id: String
  image: String
  itemid: String
  largeImage: String
  mainDescription: String
  Order: OrderUpdateOneRequiredWithoutItemsInput
  price: Int
  quantity: Int
  Size: SizeUpdateOneRequiredWithoutOrderitemInput
  title: String
  updatedAt: DateTime
}

input OrderItemUpdateWithWhereUniqueWithoutColorInput {
  data: OrderItemUpdateWithoutColorDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithWhereUniqueWithoutOrderInput {
  data: OrderItemUpdateWithoutOrderDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithWhereUniqueWithoutSizeInput {
  data: OrderItemUpdateWithoutSizeDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpdateWithWhereUniqueWithoutUserInput {
  data: OrderItemUpdateWithoutUserDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithWhereUniqueWithoutColorInput {
  create: OrderItemCreateWithoutColorInput!
  update: OrderItemUpdateWithoutColorDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithWhereUniqueWithoutOrderInput {
  create: OrderItemCreateWithoutOrderInput!
  update: OrderItemUpdateWithoutOrderDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithWhereUniqueWithoutSizeInput {
  create: OrderItemCreateWithoutSizeInput!
  update: OrderItemUpdateWithoutSizeDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemUpsertWithWhereUniqueWithoutUserInput {
  create: OrderItemCreateWithoutUserInput!
  update: OrderItemUpdateWithoutUserDataInput!
  where: OrderItemWhereUniqueInput!
}

input OrderItemWhereInput {
  AND: [OrderItemWhereInput!]
  color: StringFilter
  Color: ColorWhereInput
  createdAt: DateTimeFilter
  description: StringFilter
  id: StringFilter
  image: StringFilter
  itemid: StringFilter
  largeImage: StringFilter
  mainDescription: StringFilter
  NOT: [OrderItemWhereInput!]
  OR: [OrderItemWhereInput!]
  order: StringFilter
  Order: OrderWhereInput
  price: IntFilter
  quantity: IntFilter
  size: StringFilter
  Size: SizeWhereInput
  title: StringFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  User: UserWhereInput
}

input OrderItemWhereUniqueInput {
  id: String
}

input OrderListRelationFilter {
  every: OrderWhereInput
  none: OrderWhereInput
  some: OrderWhereInput
}

input OrderOrderByInput {
  address_line: SortOrder
  card_brand: SortOrder
  card_name: SortOrder
  charge: SortOrder
  city: SortOrder
  country: SortOrder
  createdAt: SortOrder
  id: SortOrder
  last4card_digits: SortOrder
  postcode: SortOrder
  total: SortOrder
  updatedAt: SortOrder
  user: SortOrder
}

input OrderScalarWhereInput {
  address_line: StringFilter
  AND: [OrderScalarWhereInput!]
  card_brand: StringFilter
  card_name: StringFilter
  charge: StringFilter
  city: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  last4card_digits: StringFilter
  NOT: [OrderScalarWhereInput!]
  OR: [OrderScalarWhereInput!]
  postcode: StringFilter
  total: IntFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
}

input OrderUpdateManyDataInput {
  address_line: String
  card_brand: String
  card_name: String
  charge: String
  city: String
  country: String
  createdAt: DateTime
  id: String
  last4card_digits: String
  postcode: String
  total: Int
  updatedAt: DateTime
}

input OrderUpdateManyWithoutUserInput {
  connect: [OrderWhereUniqueInput!]
  connectOrCreate: [OrderCreateOrConnectWithoutUserInput!]
  create: [OrderCreateWithoutUserInput!]
  delete: [OrderWhereUniqueInput!]
  deleteMany: [OrderScalarWhereInput!]
  disconnect: [OrderWhereUniqueInput!]
  set: [OrderWhereUniqueInput!]
  update: [OrderUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [OrderUpdateManyWithWhereNestedInput!]
  upsert: [OrderUpsertWithWhereUniqueWithoutUserInput!]
}

input OrderUpdateManyWithWhereNestedInput {
  data: OrderUpdateManyDataInput!
  where: OrderScalarWhereInput!
}

input OrderUpdateOneRequiredWithoutItemsInput {
  connect: OrderWhereUniqueInput
  connectOrCreate: OrderCreateOrConnectWithoutOrderItemInput
  create: OrderCreateWithoutItemsInput
  update: OrderUpdateWithoutItemsDataInput
  upsert: OrderUpsertWithoutItemsInput
}

input OrderUpdateWithoutItemsDataInput {
  address_line: String
  card_brand: String
  card_name: String
  charge: String
  city: String
  country: String
  createdAt: DateTime
  id: String
  last4card_digits: String
  postcode: String
  total: Int
  updatedAt: DateTime
  User: UserUpdateOneWithoutOrderInput
}

input OrderUpdateWithoutUserDataInput {
  address_line: String
  card_brand: String
  card_name: String
  charge: String
  city: String
  country: String
  createdAt: DateTime
  id: String
  items: OrderItemUpdateManyWithoutOrderInput
  last4card_digits: String
  postcode: String
  total: Int
  updatedAt: DateTime
}

input OrderUpdateWithWhereUniqueWithoutUserInput {
  data: OrderUpdateWithoutUserDataInput!
  where: OrderWhereUniqueInput!
}

input OrderUpsertWithoutItemsInput {
  create: OrderCreateWithoutItemsInput!
  update: OrderUpdateWithoutItemsDataInput!
}

input OrderUpsertWithWhereUniqueWithoutUserInput {
  create: OrderCreateWithoutUserInput!
  update: OrderUpdateWithoutUserDataInput!
  where: OrderWhereUniqueInput!
}

input OrderWhereInput {
  address_line: StringFilter
  AND: [OrderWhereInput!]
  card_brand: StringFilter
  card_name: StringFilter
  charge: StringFilter
  city: StringFilter
  country: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  items: OrderItemListRelationFilter
  last4card_digits: StringFilter
  NOT: [OrderWhereInput!]
  OR: [OrderWhereInput!]
  postcode: StringFilter
  total: IntFilter
  updatedAt: DateTimeFilter
  user: StringNullableFilter
  User: UserWhereInput
}

input OrderWhereUniqueInput {
  id: String
}

enum Permission2 {
  ADMIN
  GUEST_USER
  ITEMCREATE
  ITEMDELETE
  ITEMUPDATE
  PERMISSIONUPDATE
  USER
}

type Query {
  colors(cursor: ColorWhereUniqueInput, orderBy: [ColorOrderByInput!], skip: Int, take: Int, where: ColorWhereInput): [Color!]!
  item(where: ItemWhereUniqueInput!): Item
  items(cursor: ItemWhereUniqueInput, orderBy: [ItemOrderByInput!], skip: Int, take: Int, where: ItemWhereInput): [Item!]!
  itemsConnection(where: ItemWhereInput): ItemConnection!
  itemVariants(cursor: ItemVariantsWhereUniqueInput, orderBy: [ItemVariantsOrderByInput!], skip: Int, take: Int, where: ItemVariantsWhereInput): [ItemVariants!]!
  me: User
  order(id: String!): Order
  orders(cursor: OrderWhereUniqueInput, orderBy: [OrderOrderByInput!], skip: Int, take: Int, where: OrderWhereInput): [Order!]!
  sizes(cursor: SizeWhereUniqueInput, orderBy: [SizeOrderByInput!], skip: Int, take: Int, where: SizeWhereInput): [Size!]!
  users(cursor: UserWhereUniqueInput, orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

type SiteVisits {
  createdAt: Date!
  id: String!
  updatedAt: Date!
  url: String
  urlReferer: String
  userAgent: String
  userID: String
  userIP: String
  userType: String
}

input SiteVisitsCreateInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  url: String
  urlReferer: String
  userAgent: String
  userID: String
  userIP: String
  userType: String
}

type Size {
  createdAt: Date!
  id: String!
  item(cursor: ItemWhereUniqueInput, orderBy: [ItemOrderByInput!], skip: Int, take: Int, where: ItemWhereInput): [Item!]!
  itemvariants(cursor: ItemVariantsWhereUniqueInput, orderBy: [ItemVariantsOrderByInput!], skip: Int, take: Int, where: ItemVariantsWhereInput): [ItemVariants!]!
  label: String
  name: String!
  orderitem(cursor: OrderItemWhereUniqueInput, orderBy: [OrderItemOrderByInput!], skip: Int, take: Int, where: OrderItemWhereInput): [OrderItem!]!
  updatedAt: Date!
}

input SizeCreateOneWithoutItemInput {
  connect: SizeWhereUniqueInput
  connectOrCreate: SizeCreateOrConnectWithoutItemInput
  create: SizeCreateWithoutItemInput
}

input SizeCreateOneWithoutItemvariantsInput {
  connect: SizeWhereUniqueInput
  connectOrCreate: SizeCreateOrConnectWithoutItemVariantsInput
  create: SizeCreateWithoutItemvariantsInput
}

input SizeCreateOneWithoutOrderitemInput {
  connect: SizeWhereUniqueInput
  connectOrCreate: SizeCreateOrConnectWithoutOrderItemInput
  create: SizeCreateWithoutOrderitemInput
}

input SizeCreateOrConnectWithoutItemInput {
  create: SizeCreateWithoutItemInput!
  where: SizeWhereUniqueInput!
}

input SizeCreateOrConnectWithoutItemVariantsInput {
  create: SizeCreateWithoutItemvariantsInput!
  where: SizeWhereUniqueInput!
}

input SizeCreateOrConnectWithoutOrderItemInput {
  create: SizeCreateWithoutOrderitemInput!
  where: SizeWhereUniqueInput!
}

input SizeCreateWithoutItemInput {
  createdAt: DateTime
  id: String
  itemvariants: ItemVariantsCreateManyWithoutSizeInput
  label: String
  name: String!
  orderitem: OrderItemCreateManyWithoutSizeInput
  updatedAt: DateTime
}

input SizeCreateWithoutItemvariantsInput {
  createdAt: DateTime
  id: String
  item: ItemCreateManyWithoutSizeInput
  label: String
  name: String!
  orderitem: OrderItemCreateManyWithoutSizeInput
  updatedAt: DateTime
}

input SizeCreateWithoutOrderitemInput {
  createdAt: DateTime
  id: String
  item: ItemCreateManyWithoutSizeInput
  itemvariants: ItemVariantsCreateManyWithoutSizeInput
  label: String
  name: String!
  updatedAt: DateTime
}

input SizeOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  label: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input SizeUpdateOneRequiredWithoutItemInput {
  connect: SizeWhereUniqueInput
  connectOrCreate: SizeCreateOrConnectWithoutItemInput
  create: SizeCreateWithoutItemInput
  update: SizeUpdateWithoutItemDataInput
  upsert: SizeUpsertWithoutItemInput
}

input SizeUpdateOneRequiredWithoutItemvariantsInput {
  connect: SizeWhereUniqueInput
  connectOrCreate: SizeCreateOrConnectWithoutItemVariantsInput
  create: SizeCreateWithoutItemvariantsInput
  update: SizeUpdateWithoutItemvariantsDataInput
  upsert: SizeUpsertWithoutItemvariantsInput
}

input SizeUpdateOneRequiredWithoutOrderitemInput {
  connect: SizeWhereUniqueInput
  connectOrCreate: SizeCreateOrConnectWithoutOrderItemInput
  create: SizeCreateWithoutOrderitemInput
  update: SizeUpdateWithoutOrderitemDataInput
  upsert: SizeUpsertWithoutOrderitemInput
}

input SizeUpdateWithoutItemDataInput {
  createdAt: DateTime
  id: String
  itemvariants: ItemVariantsUpdateManyWithoutSizeInput
  label: String
  name: String
  orderitem: OrderItemUpdateManyWithoutSizeInput
  updatedAt: DateTime
}

input SizeUpdateWithoutItemvariantsDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateManyWithoutSizeInput
  label: String
  name: String
  orderitem: OrderItemUpdateManyWithoutSizeInput
  updatedAt: DateTime
}

input SizeUpdateWithoutOrderitemDataInput {
  createdAt: DateTime
  id: String
  item: ItemUpdateManyWithoutSizeInput
  itemvariants: ItemVariantsUpdateManyWithoutSizeInput
  label: String
  name: String
  updatedAt: DateTime
}

input SizeUpsertWithoutItemInput {
  create: SizeCreateWithoutItemInput!
  update: SizeUpdateWithoutItemDataInput!
}

input SizeUpsertWithoutItemvariantsInput {
  create: SizeCreateWithoutItemvariantsInput!
  update: SizeUpdateWithoutItemvariantsDataInput!
}

input SizeUpsertWithoutOrderitemInput {
  create: SizeCreateWithoutOrderitemInput!
  update: SizeUpdateWithoutOrderitemDataInput!
}

input SizeWhereInput {
  AND: [SizeWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  item: ItemListRelationFilter
  itemvariants: ItemVariantsListRelationFilter
  label: StringNullableFilter
  name: StringFilter
  NOT: [SizeWhereInput!]
  OR: [SizeWhereInput!]
  orderitem: OrderItemListRelationFilter
  updatedAt: DateTimeFilter
}

input SizeWhereUniqueInput {
  id: String
  name: String
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Subscription {
  itemDeleted: ItemModifier!
  itemWatch: ItemModifier!
}

type SuccessMessage {
  message: String!
}

type User {
  address(cursor: AddressWhereUniqueInput, orderBy: [AddressOrderByInput!], skip: Int, take: Int, where: AddressWhereInput): [Address!]!
  cart(cursor: CartItemWhereUniqueInput, orderBy: [CartItemOrderByInput!], skip: Int, take: Int, where: CartItemWhereInput): [CartItem!]!
  createdAt: Date!
  email: String!
  id: String!
  items(cursor: ItemWhereUniqueInput, orderBy: [ItemOrderByInput!], skip: Int, take: Int, where: ItemWhereInput): [Item!]!
  itemvariants(cursor: ItemVariantsWhereUniqueInput, orderBy: [ItemVariantsOrderByInput!], skip: Int, take: Int, where: ItemVariantsWhereInput): [ItemVariants!]!
  name: String!
  order(cursor: OrderWhereUniqueInput, orderBy: [OrderOrderByInput!], skip: Int, take: Int, where: OrderWhereInput): [Order!]!
  orderitem(cursor: OrderItemWhereUniqueInput, orderBy: [OrderItemOrderByInput!], skip: Int, take: Int, where: OrderItemWhereInput): [OrderItem!]!
  password: String!
  permissions2: [Permission2!]!
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: Date!
}

input UserCreateOneWithoutCartInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCartItemInput
  create: UserCreateWithoutCartInput
}

input UserCreateOneWithoutItemsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutItemInput
  create: UserCreateWithoutItemsInput
}

input UserCreateOneWithoutItemvariantsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutItemVariantsInput
  create: UserCreateWithoutItemvariantsInput
}

input UserCreateOneWithoutOrderInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOrderInput
  create: UserCreateWithoutOrderInput
}

input UserCreateOneWithoutOrderitemInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOrderItemInput
  create: UserCreateWithoutOrderitemInput
}

input UserCreateOrConnectWithoutCartItemInput {
  create: UserCreateWithoutCartInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutItemInput {
  create: UserCreateWithoutItemsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutItemVariantsInput {
  create: UserCreateWithoutItemvariantsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOrderInput {
  create: UserCreateWithoutOrderInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutOrderItemInput {
  create: UserCreateWithoutOrderitemInput!
  where: UserWhereUniqueInput!
}

input UserCreatepermissions2Input {
  set: [Permission2!]
}

input UserCreateWithoutCartInput {
  address: AddressCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  items: ItemCreateManyWithoutUserInput
  itemvariants: ItemVariantsCreateManyWithoutUserInput
  name: String!
  order: OrderCreateManyWithoutUserInput
  orderitem: OrderItemCreateManyWithoutUserInput
  password: String!
  permissions2: UserCreatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserCreateWithoutItemsInput {
  address: AddressCreateManyWithoutUserInput
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  itemvariants: ItemVariantsCreateManyWithoutUserInput
  name: String!
  order: OrderCreateManyWithoutUserInput
  orderitem: OrderItemCreateManyWithoutUserInput
  password: String!
  permissions2: UserCreatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserCreateWithoutItemvariantsInput {
  address: AddressCreateManyWithoutUserInput
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  items: ItemCreateManyWithoutUserInput
  name: String!
  order: OrderCreateManyWithoutUserInput
  orderitem: OrderItemCreateManyWithoutUserInput
  password: String!
  permissions2: UserCreatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserCreateWithoutOrderInput {
  address: AddressCreateManyWithoutUserInput
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  items: ItemCreateManyWithoutUserInput
  itemvariants: ItemVariantsCreateManyWithoutUserInput
  name: String!
  orderitem: OrderItemCreateManyWithoutUserInput
  password: String!
  permissions2: UserCreatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserCreateWithoutOrderitemInput {
  address: AddressCreateManyWithoutUserInput
  cart: CartItemCreateManyWithoutUserInput
  createdAt: DateTime
  email: String!
  id: String
  items: ItemCreateManyWithoutUserInput
  itemvariants: ItemVariantsCreateManyWithoutUserInput
  name: String!
  order: OrderCreateManyWithoutUserInput
  password: String!
  permissions2: UserCreatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserOrderByInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  name: SortOrder
  password: SortOrder
  permissions2: SortOrder
  resetToken: SortOrder
  resetTokenExpiry: SortOrder
  updatedAt: SortOrder
}

input UserUpdateOneWithoutCartInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCartItemInput
  create: UserCreateWithoutCartInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutCartDataInput
  upsert: UserUpsertWithoutCartInput
}

input UserUpdateOneWithoutItemsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutItemInput
  create: UserCreateWithoutItemsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutItemsDataInput
  upsert: UserUpsertWithoutItemsInput
}

input UserUpdateOneWithoutItemvariantsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutItemVariantsInput
  create: UserCreateWithoutItemvariantsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutItemvariantsDataInput
  upsert: UserUpsertWithoutItemvariantsInput
}

input UserUpdateOneWithoutOrderInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOrderInput
  create: UserCreateWithoutOrderInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutOrderDataInput
  upsert: UserUpsertWithoutOrderInput
}

input UserUpdateOneWithoutOrderitemInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutOrderItemInput
  create: UserCreateWithoutOrderitemInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutOrderitemDataInput
  upsert: UserUpsertWithoutOrderitemInput
}

input UserUpdatepermissions2Input {
  set: [Permission2!]
}

input UserUpdateWithoutCartDataInput {
  address: AddressUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  items: ItemUpdateManyWithoutUserInput
  itemvariants: ItemVariantsUpdateManyWithoutUserInput
  name: String
  order: OrderUpdateManyWithoutUserInput
  orderitem: OrderItemUpdateManyWithoutUserInput
  password: String
  permissions2: UserUpdatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserUpdateWithoutItemsDataInput {
  address: AddressUpdateManyWithoutUserInput
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  itemvariants: ItemVariantsUpdateManyWithoutUserInput
  name: String
  order: OrderUpdateManyWithoutUserInput
  orderitem: OrderItemUpdateManyWithoutUserInput
  password: String
  permissions2: UserUpdatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserUpdateWithoutItemvariantsDataInput {
  address: AddressUpdateManyWithoutUserInput
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  items: ItemUpdateManyWithoutUserInput
  name: String
  order: OrderUpdateManyWithoutUserInput
  orderitem: OrderItemUpdateManyWithoutUserInput
  password: String
  permissions2: UserUpdatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserUpdateWithoutOrderDataInput {
  address: AddressUpdateManyWithoutUserInput
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  items: ItemUpdateManyWithoutUserInput
  itemvariants: ItemVariantsUpdateManyWithoutUserInput
  name: String
  orderitem: OrderItemUpdateManyWithoutUserInput
  password: String
  permissions2: UserUpdatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserUpdateWithoutOrderitemDataInput {
  address: AddressUpdateManyWithoutUserInput
  cart: CartItemUpdateManyWithoutUserInput
  createdAt: DateTime
  email: String
  id: String
  items: ItemUpdateManyWithoutUserInput
  itemvariants: ItemVariantsUpdateManyWithoutUserInput
  name: String
  order: OrderUpdateManyWithoutUserInput
  password: String
  permissions2: UserUpdatepermissions2Input
  resetToken: String
  resetTokenExpiry: Float
  updatedAt: DateTime
}

input UserUpsertWithoutCartInput {
  create: UserCreateWithoutCartInput!
  update: UserUpdateWithoutCartDataInput!
}

input UserUpsertWithoutItemsInput {
  create: UserCreateWithoutItemsInput!
  update: UserUpdateWithoutItemsDataInput!
}

input UserUpsertWithoutItemvariantsInput {
  create: UserCreateWithoutItemvariantsInput!
  update: UserUpdateWithoutItemvariantsDataInput!
}

input UserUpsertWithoutOrderInput {
  create: UserCreateWithoutOrderInput!
  update: UserUpdateWithoutOrderDataInput!
}

input UserUpsertWithoutOrderitemInput {
  create: UserCreateWithoutOrderitemInput!
  update: UserUpdateWithoutOrderitemDataInput!
}

input UserWhereInput {
  address: AddressListRelationFilter
  AND: [UserWhereInput!]
  cart: CartItemListRelationFilter
  createdAt: DateTimeFilter
  email: StringFilter
  id: StringFilter
  items: ItemListRelationFilter
  itemvariants: ItemVariantsListRelationFilter
  name: StringFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  order: OrderListRelationFilter
  orderitem: OrderItemListRelationFilter
  password: StringFilter
  permissions2: [Permission2!]
  resetToken: StringNullableFilter
  resetTokenExpiry: FloatNullableFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}
